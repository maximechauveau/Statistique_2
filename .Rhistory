data <- read.csv2(.data/data.csv)
data <- read.csv2(./data/data.csv)
data <- read.csv2(/data/data.csv)
data <- read.csv2("./data/data.csv")
View(data)
data <- read.csv2("./data/data.csv", header = TRUE, sep = ",")
View(data)
View(data)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
data <- as.character(data)
data <- read.csv2("./data/data.csv", header = TRUE, sep = ",")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
View(data)
data$R_fighter <- as.character(data$R_fighter)
data$R_fighter <- as.character(data$R_fighter)
data$R_fighter <- as.character(data$R_fighter)# Pensez à regarder si des erreurs de saisie / valeurs aberrantes sont présentes
data$R_fighter <- as.character(data$R_fighter)
data$R_fighter <- as.character(data$R_fighter)data$R_fighter <- as.character(data$R_fighter)# Pensez à regarder si des erreurs de saisie / valeurs aberrantes sont présentes
data$location <- as.character(data$location)
library("dplyr")
library(tidyverse)
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
select?
select?
?select
df_red %>% select(data, starts_with("R_"))
df_red <-  select(data, starts_with("R_"))
View(df_red)
df_red <-  select(data,4,6,8,9, starts_with("R_"))
View(df_red)
df_blue <-  select(data,4,6,8,9, starts_with("B_"))
View(df_blue)
df_red <- gsub("R_", "", df_red)
df_red <-  select(data,4,6,8,9, starts_with("R_"))
View(data)
names(df_red)
nom_col <- sub("R_","",names(df_red))
nom_col
names(df_blue)
names(df_blue) <- nom_col
names(df_red) <- nom_col
View(df_red)
View(df_blue)
data_all <- rbind(df_red,df_blue)
View(data_all)
test <- data_all %>%
group_by(fighter) %>%
filter(date == max(date))
View(data)
data_all$Nb_total_combat <- data_all$wins + data_all$losses
data_all$wins <- as.numeric(data_all$wins)
data_all$losses <- as.numeric(data_all$losses)
data_all$dra <- as.numeric(data_all$draw)
data_all$Nb_total_combat <- data_all$wins + data_all$losses + data_all$draw
View(data_all)
data_all <- as.data.frame(data_all)
data_all$Nb_total_combat <- data_all$wins + data_all$losses + data_all$draw
data_all$Nb_total_combat <- data_all$wins + data_all$losses + data_all$draw
View(data)
data_all$draw <- as.numeric(data_all$draw)
data_all$dra <- as.numeric(data_all$draw)
data_all$wins <- as.numeric(data_all$wins)
data_all$losses <- as.numeric(data_all$losses)
data_all$draw <- as.numeric(data_all$draw)
data_all$Nb_total_combat <- data_all$wins + data_all$losses + data_all$draw
test <- data_all %>%
group_by(fighter) %>%
filter(Nb_total_combat == max(Nb_total_combat))
data_all <- data_all %>%
group_by(fighter) %>%
filter(Nb_total_combat == max(Nb_total_combat))
data <- read.csv2("./data/data.csv", header = TRUE, sep = ",")
data <- read.csv2("./data/data.csv", header = TRUE, sep = ",")
df_red <-  select(data,4,6,8,9, starts_with("R_"))
df_blue <-  select(data,4,6,8,9, starts_with("B_"))
nom_col <- sub("R_","",names(df_red))
names(df_blue) <- nom_col
names(df_red) <- nom_col
data_all <- rbind(df_red,df_blue)
data_all$wins <- as.numeric(data_all$wins)
data_all$losses <- as.numeric(data_all$losses)
data_all$draw <- as.numeric(data_all$draw)
data_all$Nb_total_combat <- data_all$wins + data_all$losses + data_all$draw
data_all <- data_all %>%
group_by(fighter) %>%
filter(Nb_total_combat == max(Nb_total_combat))
View(data_all)
data <- read.csv2("./data/data.csv", header = TRUE, sep = ",")
df_red <-  select(data,4,6,8,9, starts_with("R_"))
df_blue <-  select(data,4,6,8,9, starts_with("B_"))
nom_col <- sub("R_","",names(df_red))
names(df_blue) <- nom_col
names(df_red) <- nom_col
data_all <- rbind(df_red,df_blue)
data_all$wins <- as.numeric(data_all$wins)
data_all$losses <- as.numeric(data_all$losses)
data_all$draw <- as.numeric(data_all$draw)
data_all$Nb_total_combat <- data_all$wins + data_all$losses + data_all$draw
data_all_unique <- data_all %>%
group_by(fighter) %>%
filter(Nb_total_combat == max(Nb_total_combat))
with(data_all_unique, plot(Height_cms, Weight_lbs))
with(data_all_unique, qplot(Height_cms, Weight_lbs))
plot(x = data_all_unique$Height_cms, y = data_all_unique$Weight_lbs)
scatterplot(data_all_unique$Height_cms, data_all_unique$Weight_lbs)
library("car")
scatterplot(data_all_unique$Height_cms, data_all_unique$Weight_lbs)
data_all_unique$Weight_lbs <- as.numeric(data_all_unique$Weight_lbs)
data_all_unique$Height_cms <- as.numeric(data_all_unique$Height_cms)
plot(x = data_all_unique$Height_cms, y = data_all_unique$Weight_lbs)
scatterplot(data_all_unique$Height_cms, data_all_unique$Weight_lbs)
with(data_all_unique, qplot(Height_cms, Weight_lbs))
summary(data_all_unique)
cor(data_all_unique$Height_cms,data_all_unique$Weight_lbs)
lm(formula=Weight_lbs~Height_cms,data=data_all_unique)
lm(formula=Height_cms~Weight_lbs,data=data_all_unique)
resultat <- lm(formula=Height_cms~Weight_lbs,data=data_all_unique)
summary(resultat)
View(resultat)
resultat <- lm(formula=Weight_lbs~Height_cms,data=data_all_unique)
summary(resultat)
resultat$coefficients
plot(x = data_all_unique$Height_cms, y = data_all_unique$Weight_lbs)
res.lm <- lm(formula=Weight_lbs~Height_cms,data=data_all_unique)
summary(res.lm)
res.lm$coefficients
plot(x = data_all_unique$Height_cms, y = data_all_unique$Weight_lbs)
abline(a=res.lm$coefficients[1], b= res.lm$coefficients[2],col=2, lty=2, lwd=1.5)
rstud = rstudent(res.lm)
rstud
# graphique des résidus studentisés
plot(rstud,pch=20,ylab="Résidus studentisés",ylim=c(-3,3))
abline(h=c(0), col="grey",lty=1,lwd=2)
abline(h=c(-2,2), col="grey",lty=2,lwd=2)
res.qq=qqnorm(rstud, pch=20, ylim=c(-3,7),xlim=c(-3,3))
qqline(rstud, lty=2, lwd=2, col=2)
#Distance de cook
res.cook=cooks.distance(model=res.lm)
plot(res.cook, type="h",ylab="Distances de Cook", ylim=c(0,0.6))
abline(h=0.5,col="gray",lty=2)
res.qq=qqnorm(rstud, pch=20, ylim=c(-3,7),xlim=c(-3,3))
#Distance de cook
res.cook=cooks.distance(model=res.lm)
plot(res.cook, type="h",ylab="Distances de Cook", ylim=c(0,0.6))
View(data_all_unique)
cor(data_all_unique$Height_cms,data_all_unique$Weight_lbs)
res.lm <- lm(formula=Weight_lbs~Height_cms,data=data_all_unique)
summary(res.lm)
scatterplot(data_all_unique$Height_cms, data_all_unique$Weight_lbs)
plot(x = data_all_unique$Height_cms, y = data_all_unique$Weight_lbs)
with(data_all_unique, qplot(Height_cms, Weight_lbs))
